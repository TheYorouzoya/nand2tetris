class Gear {
    field int x, y, x2, y2, orientation, frame, type;
    field boolean animated;
    field Array tileA, tileB;

    constructor Gear new(int Ax, int Ay, int Aor, int Atyp, boolean anim) {
        let x = Ax;
        let y = Ay;
        let orientation = Aor;
        let type = Atyp;
        let tileA = Array.new(16);
        if (type = 1) {
            let tileB = Array.new(16);
            do initializeGear();
            do loadLargeGearLeft(tileA);
            do loadLargeGearRight(tileB);
        }
        else {
            do loadSmallGear(tileA);
        }
        let animated = anim;
        let frame = 1;
        
        return this;
    }

    method void dispose() {
        do tileA.dispose();
        do tileB.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void initializeGear() {
        if (orientation = 1) {
            let x2 = x + 2;
            let y2 = y;
        }
        if (orientation = 2) {
            let x2 = x;
            let y2 = y + 2;
        }
        if (orientation = 3) {
            let x2 = x - 2;
            let y2 = y;
        }
        if (orientation = 4) {
            let x2 = x;
            let y2 = y - 2;
        }
        return;
    }

    method void draw() {
        if (type = 1) {
            do drawLargeGear();
        }
        else {
            do drawSmallGear();
        }
        return;
    }

    method void setAnimated(boolean value) {
        let animated = value;
        return;
    }

    method void drawLargeGear() {
        if (animated) {
            let frame = frame + 1;
        }

        do Tiles.eraseTile(x, y);
        do Tiles.eraseTile(x2, y2);

        do loadLargeGearLeft(tileA);
        do Tiles.drawTile(x, y, tileA);

        do loadLargeGearRight(tileB);
        do Tiles.drawTile(x2, y2, tileB);
        
        if (frame = 4) {
            let frame = 0;
        }

        return;
    }

    method void drawSmallGear() {
        if (animated) {
            let frame = frame + 1;
        }
        do Tiles.eraseTile(x, y);
        do loadSmallGear(tileA);
        do Tiles.drawTile(x, y, tileA);
        if (frame = 4) {
            let frame = 0;
        }
        return;
    }

    method void loadLargeGearLeft(Array tile) {
        if (orientation = 1) {
            if (frame = 1) {
                let tile[0] = 16383;
                let tile[1] = -1;
                let tile[2] = 7269;
                let tile[3] = 7269;
                let tile[4] = 7269;
                let tile[5] = 7269;
                let tile[6] = 7269;
                let tile[7] = 7269;
                let tile[8] = 7269;
                let tile[9] = -1;
                let tile[10] = 1;
                let tile[11] = 16383;
                let tile[12] = 8191;
                let tile[13] = -1;
                let tile[14] = 16383;
                let tile[15] = -1;
            }
            if (frame = 3) {
                let tile[0] = 16383;
                let tile[1] = -1;
                let tile[2] = -7269;
                let tile[3] = -7269;
                let tile[4] = -7269;
                let tile[5] = -7269;
                let tile[6] = -7269;
                let tile[7] = -7269;
                let tile[8] = -7269;
                let tile[9] = -1;
                let tile[10] = 1;
                let tile[11] = 16383;
                let tile[12] = 8191;
                let tile[13] = -1;
                let tile[14] = 16383;
                let tile[15] = -1;
            }
            return;
        }
        if (orientation = 2) {
            if (frame = 1) {
                let tile[0] = -1;
                let tile[1] = -16289;
                let tile[2] = -33;
                let tile[3] = -16289;
                let tile[4] = -16289;
                let tile[5] = -33;
                let tile[6] = -33;
                let tile[7] = -16289;
                let tile[8] = -16289;
                let tile[9] = -16289;
                let tile[10] = -33;
                let tile[11] = -33;
                let tile[12] = -33;
                let tile[13] = -16297;
                let tile[14] = -16315;
                let tile[15] = -16315;
            }
            if (frame = 3) {
                let tile[0] = -1;
                let tile[1] = -33;
                let tile[2] = -16289;
                let tile[3] = -33;
                let tile[4] = -33;
                let tile[5] = -16289;
                let tile[6] = -16289;
                let tile[7] = -33;
                let tile[8] = -33;
                let tile[9] = -33;
                let tile[10] = -16289;
                let tile[11] = -16289;
                let tile[12] = -16289;
                let tile[13] = -41;
                let tile[14] = 32709;
                let tile[15] = 32709;
            }
        }
        if (orientation = 3) {
            if (frame = 1) {
                let tile[0] = -1;
                let tile[1] = -4;
                let tile[2] = -1;
                let tile[3] = -8;
                let tile[4] = -4;
                let tile[5] = -32767 - 1;
                let tile[6] = -1;
                let tile[7] = -22984;
                let tile[8] = -22984;
                let tile[9] = -22984;
                let tile[10] = -22984;
                let tile[11] = -22984;
                let tile[12] = -22984;
                let tile[13] = -22984;
                let tile[14] = -1;
                let tile[15] = -1;
            }
            if (frame = 3) {
                let tile[0] = -1;
                let tile[1] = -4;
                let tile[2] = -1;
                let tile[3] = -8;
                let tile[4] = -4;
                let tile[5] = -32767 - 1;
                let tile[6] = -1;
                let tile[7] = -9785;
                let tile[8] = -9785;
                let tile[9] = -9785;
                let tile[10] = -9785;
                let tile[11] = -9785;
                let tile[12] = -9785;
                let tile[13] = -9785;
                let tile[14] = -1;
                let tile[15] = -4;
            }
        }
        if (orientation = 4) {
            if (frame = 1) {
                let tile[0] = -24061;
                let tile[1] = -24061;
                let tile[2] = -5629;
                let tile[3] = -1025;
                let tile[4] = -1025;
                let tile[5] = -1025;
                let tile[6] = -1533;
                let tile[7] = -1533;
                let tile[8] = -1533;
                let tile[9] = -1025;
                let tile[10] = -1025;
                let tile[11] = -1533;
                let tile[12] = -1533;
                let tile[13] = -1025;
                let tile[14] = -1533;
                let tile[15] = -1;
            }
            if (frame = 3) {
                let tile[0] = -23554;
                let tile[1] = -23554;
                let tile[2] = -5121;
                let tile[3] = -1533;
                let tile[4] = -1533;
                let tile[5] = -1533;
                let tile[6] = -1025;
                let tile[7] = -1025;
                let tile[8] = -1025;
                let tile[9] = -1533;
                let tile[10] = -1533;
                let tile[11] = -1025;
                let tile[12] = -1025;
                let tile[13] = -1533;
                let tile[14] = -1025;
                let tile[15] = -1;
            }
        }
        return;
    }

    method void loadLargeGearRight(Array tile) {
        if (orientation = 1) {
            if (frame = 1) {
                let tile[0] = -1;
                let tile[1] = -1;
                let tile[2] = -22984;
                let tile[3] = -22984;
                let tile[4] = -22984;
                let tile[5] = -22984;
                let tile[6] = -22984;
                let tile[7] = -22984;
                let tile[8] = -22984;
                let tile[9] = -1;
                let tile[10] = -32767 - 1;
                let tile[11] = -4;
                let tile[12] = -8;
                let tile[13] = -1;
                let tile[14] = -4;
                let tile[15] = -1;
            }
            if (frame = 3) {
                let tile[0] = -4;
                let tile[1] = -1;
                let tile[2] = -9785;
                let tile[3] = -9785;
                let tile[4] = -9785;
                let tile[5] = -9785;
                let tile[6] = -9785;
                let tile[7] = -9785;
                let tile[8] = -9785;
                let tile[9] = -1;
                let tile[10] = -32767 - 1;
                let tile[11] = -4;
                let tile[12] = -8;
                let tile[13] = -1;
                let tile[14] = -4;
                let tile[15] = -1;
            }
            return;
        }
        if (orientation = 2) {
            if (frame = 1) {
                let tile[0] = -16315;
                let tile[1] = -16315;
                let tile[2] = -16297;
                let tile[3] = -33;
                let tile[4] = -33;
                let tile[5] = -33;
                let tile[6] = -16289;
                let tile[7] = -16289;
                let tile[8] = -16289;
                let tile[9] = -33;
                let tile[10] = -33;
                let tile[11] = -16289;
                let tile[12] = -16289;
                let tile[13] = -33;
                let tile[14] = -16289;
                let tile[15] = -1;
            }
            if (frame = 3) {
                let tile[0] = 32709;
                let tile[1] = 32709;
                let tile[2] = -41;
                let tile[3] = -16289;
                let tile[4] = -16289;
                let tile[5] = -16289;
                let tile[6] = -33;
                let tile[7] = -33;
                let tile[8] = -33;
                let tile[9] = -16289;
                let tile[10] = -16289;
                let tile[11] = -33;
                let tile[12] = -33;
                let tile[13] = -16289;
                let tile[14] = -33;
                let tile[15] = -1;
            }
        }
        if (orientation = 3) {
            if (frame = 1) {
                let tile[0] = -1;
                let tile[1] = 16383;
                let tile[2] = -1;
                let tile[3] = 8191;
                let tile[4] = 16383;
                let tile[5] = 1;
                let tile[6] = -1;
                let tile[7] = 7269;
                let tile[8] = 7269;
                let tile[9] = 7269;
                let tile[10] = 7269;
                let tile[11] = 7269;
                let tile[12] = 7269;
                let tile[13] = 7269;
                let tile[14] = -1;
                let tile[15] = -1;
            }
            if (frame = 3) {
                let tile[0] = -1;
                let tile[1] = 16383;
                let tile[2] = -1;
                let tile[3] = 8191;
                let tile[4] = 16383;
                let tile[5] = 1;
                let tile[6] = -1;
                let tile[7] = -7269;
                let tile[8] = -7269;
                let tile[9] = -7269;
                let tile[10] = -7269;
                let tile[11] = -7269;
                let tile[12] = -7269;
                let tile[13] = -7269;
                let tile[14] = -1;
                let tile[15] = 16383;
            }
        }
        if (orientation = 4) {
            if (frame = 1) {
                let tile[0] = -1;
                let tile[1] = -1533;
                let tile[2] = -1025;
                let tile[3] = -1533;
                let tile[4] = -1533;
                let tile[5] = -1025;
                let tile[6] = -1025;
                let tile[7] = -1533;
                let tile[8] = -1533;
                let tile[9] = -1533;
                let tile[10] = -1025;
                let tile[11] = -1025;
                let tile[12] = -1025;
                let tile[13] = -5629;
                let tile[14] = -24061;
                let tile[15] = -24061;
            }
            if (frame = 3) {
                let tile[0] = -1;
                let tile[1] = -1025;
                let tile[2] = -1533;
                let tile[3] = -1025;
                let tile[4] = -1025;
                let tile[5] = -1533;
                let tile[6] = -1533;
                let tile[7] = -1025;
                let tile[8] = -1025;
                let tile[9] = -1025;
                let tile[10] = -1533;
                let tile[11] = -1533;
                let tile[12] = -1533;
                let tile[13] = -5121;
                let tile[14] = -23554;
                let tile[15] = -23554;
            }
        }
        return;
    }

    method void loadSmallGear(Array tile) {
        if (orientation = 1) {
            if (frame = 1) {
                let tile[0] = -385;
                let tile[1] = -1;
                let tile[2] = 19506;
                let tile[3] = 19506;
                let tile[4] = 19506;
                let tile[5] = 19506;
                let tile[6] = -1;
                let tile[7] = 0;
                let tile[8] = -961;
                let tile[9] = -2017;
                let tile[10] = -1;
                let tile[11] = -961;
                let tile[12] = -961;
                let tile[13] = -961;
                let tile[14] = -961;
                let tile[15] = -961;
            }
            if (frame = 3) {
                let tile[0] = -385;
                let tile[1] = -1;
                let tile[2] = -19507;
                let tile[3] = -19507;
                let tile[4] = -19507;
                let tile[5] = -19507;
                let tile[6] = -1;
                let tile[7] = -32767;
                let tile[8] = -961;
                let tile[9] = -2017;
                let tile[10] = -1;
                let tile[11] = -961;
                let tile[12] = -961;
                let tile[13] = -961;
                let tile[14] = -961;
                let tile[15] = -961;
            }
        }
        if (orientation = 2) {
            if (frame = 1) {
                let tile[0] = -15617;
                let tile[1] = -257;
                let tile[2] = -15617;
                let tile[3] = -15617;
                let tile[4] = -257;
                let tile[5] = -321;
                let tile[6] = -15840;
                let tile[7] = 16928;
                let tile[8] = 16928;
                let tile[9] = -15840;
                let tile[10] = -321;
                let tile[11] = -257;
                let tile[12] = -15617;
                let tile[13] = -15617;
                let tile[14] = -257;
                let tile[15] = -15617;
            }
            if (frame = 3) {
                let tile[0] = -1;
                let tile[1] = -15617;
                let tile[2] = -257;
                let tile[3] = -257;
                let tile[4] = -15617;
                let tile[5] = -15681;
                let tile[6] = -480;
                let tile[7] = 32288;
                let tile[8] = 32288;
                let tile[9] = -480;
                let tile[10] = -15681;
                let tile[11] = -15617;
                let tile[12] = -257;
                let tile[13] = -257;
                let tile[14] = -15617;
                let tile[15] = -1;
            }
        }
        if (orientation = 3) {
            if (frame = 1) {
                let tile[0] = -961;
                let tile[1] = -961;
                let tile[2] = -961;
                let tile[3] = -961;
                let tile[4] = -961;
                let tile[5] = -1;
                let tile[6] = -2017;
                let tile[7] = -961;
                let tile[8] = 0;
                let tile[9] = -1;
                let tile[10] = 19506;
                let tile[11] = 19506;
                let tile[12] = 19506;
                let tile[13] = 19506;
                let tile[14] = -1;
                let tile[15] = -385;
            }
            if (frame = 3) {
                let tile[0] = -961;
                let tile[1] = -961;
                let tile[2] = -961;
                let tile[3] = -961;
                let tile[4] = -961;
                let tile[5] = -1;
                let tile[6] = -2017;
                let tile[7] = -961;
                let tile[8] = -32767;
                let tile[9] = -1;
                let tile[10] = -19507;
                let tile[11] = -19507;
                let tile[12] = -19507;
                let tile[13] = -19507;
                let tile[14] = -1;
                let tile[15] = -385;
            }
        }
        if (orientation = 4) {
            if (frame = 1) {
                let tile[0] = -189;
                let tile[1] = -129;
                let tile[2] = -189;
                let tile[3] = -189;
                let tile[4] = -129;
                let tile[5] = -641;
                let tile[6] = 1091;
                let tile[7] = 1090;
                let tile[8] = 1090;
                let tile[9] = 1091;
                let tile[10] = -641;
                let tile[11] = -129;
                let tile[12] = -189;
                let tile[13] = -189;
                let tile[14] = -129;
                let tile[15] = -189;
            }
            if (frame = 3) {
                let tile[0] = -1;
                let tile[1] = -189;
                let tile[2] = -129;
                let tile[3] = -129;
                let tile[4] = -189;
                let tile[5] = -701;
                let tile[6] = 1151;
                let tile[7] = 1150;
                let tile[8] = 1150;
                let tile[9] = 1151;
                let tile[10] = -701;
                let tile[11] = -189;
                let tile[12] = -129;
                let tile[13] = -129;
                let tile[14] = -189;
                let tile[15] = -1;
            }
        }
        return;
    }
}